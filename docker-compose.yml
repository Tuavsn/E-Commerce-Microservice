services:
  database-user:
    image: mysql:latest
    ports:
      - 3307:3306
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD']
      interval: 25s
      retries: 5
      start_period: 20s
      timeout: 10s
    volumes:
      - user-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 20032003Tt
      MYSQL_DATABASE: ecommerce_user_db

  database-product:
    image: mysql:latest
    ports:
      - 3308:3306
    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      interval: 25s
      retries: 5
      start_period: 20s
      timeout: 10s
    volumes:
      - product-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 20032003Tt
      MYSQL_DATABASE: ecommerce_product_db

  backend-config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - 8888:8888
    healthcheck:
      test: wget --spider --quiet 'http://localhost:8888/actuator/health' || exit 1
      interval: 25s
      retries: 5
      start_period: 20s
      timeout: 10s

  backend-discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    ports:
      - 8761:8761
    healthcheck:
      test: wget --spider --quiet 'http://localhost:8761/actuator/health' || exit 1
      interval: 25s
      retries: 5
      start_period: 20s
      timeout: 10s
    depends_on:
      backend-config-server:
        condition: service_healthy

  backend-api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      backend-discovery-server:
        condition: service_healthy

  backend-user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
      args:
        - MAVEN_USERNAME=${MAVEN_USERNAME}
        - MAVEN_PASSWORD=${MAVEN_PASSWORD}
    ports:
      - 9000:9000
    depends_on:
      backend-discovery-server:
        condition: service_healthy
      database-user:
        condition: service_healthy

  backend-product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
      args:
        - MAVEN_USERNAME=${MAVEN_USERNAME}
        - MAVEN_PASSWORD=${MAVEN_PASSWORD}
    ports:
      - 9001:9001
    depends_on:
      backend-discovery-server:
        condition: service_healthy
      database-product:
        condition: service_healthy

volumes:
  user-data:
  product-data: